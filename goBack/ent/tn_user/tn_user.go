// Code generated by ent, DO NOT EDIT.

package tn_user

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the tn_user type in the database.
	Label = "tn_user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "idx"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldUserName holds the string denoting the user_name field in the database.
	FieldUserName = "user_name"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldDelectYn holds the string denoting the delect_yn field in the database.
	FieldDelectYn = "delect_yn"
	// FieldRegDate holds the string denoting the reg_date field in the database.
	FieldRegDate = "reg_date"
	// FieldUdtDate holds the string denoting the udt_date field in the database.
	FieldUdtDate = "udt_date"
	// Table holds the table name of the tn_user in the database.
	Table = "TN_USER"
)

// Columns holds all SQL columns for tn_user fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldUserName,
	FieldPassword,
	FieldDelectYn,
	FieldRegDate,
	FieldUdtDate,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the TN_USER queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUserID orders the results by the user_id field.
func ByUserID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserID, opts...).ToFunc()
}

// ByUserName orders the results by the user_name field.
func ByUserName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserName, opts...).ToFunc()
}

// ByPassword orders the results by the password field.
func ByPassword(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPassword, opts...).ToFunc()
}

// ByDelectYn orders the results by the delect_yn field.
func ByDelectYn(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDelectYn, opts...).ToFunc()
}

// ByRegDate orders the results by the reg_date field.
func ByRegDate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRegDate, opts...).ToFunc()
}

// ByUdtDate orders the results by the udt_date field.
func ByUdtDate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUdtDate, opts...).ToFunc()
}
